name: Build Windows Release Engine (AOT) from Monorepo

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout Flutter Monorepo at specific commit
      uses: actions/checkout@v4
      with:
        repository: sideloads/flutter
        ref: d693b4b9dbac2acd4477aea4555ca6dcbea44ba2
        fetch-depth: 0
        path: flutter

    - name: Set up Depot Tools
      run: |
        git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
        echo "$PWD\depot_tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      shell: pwsh

    - name: Configure Git
      run: |
        git config --global user.name "CI Bot"
        git config --global user.email "ci@example.com"
        git config --global core.autocrlf false
        git config --global core.filemode false
      shell: cmd

    - name: Enable Long Path Support
      run: Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled" -Value 1 -Force
      shell: pwsh
      
    - name: Configure and Synchronize Dependencies
      run: |
        cd flutter
        copy engine\scripts\standard.gclient .gclient
        # This command will now also fetch the appropriate Windows toolchain
        gclient sync -D
      shell: cmd

    - name: Generate Release Build Files for AOT
      run: |
        cd flutter\engine\src
        python .\flutter\tools\gn --runtime-mode=release
      shell: cmd

    - name: Compile Windows Engine
      run: |
        cd flutter\engine\src
        ninja -C out\host_release
      shell: cmd

    - name: Zip Build Artifacts for External Upload
      run: Compress-Archive -Path flutter/engine/src/out/host_release/* -DestinationPath flutter-engine-windows-release.zip
      shell: pwsh

    - name: Upload Zipped Artifact to bashupload.com
      run: |
        Write-Host "Uploading flutter-engine-windows-release.zip to bashupload.com"
        try {
          $response = Invoke-RestMethod -Uri "https://bashupload.com/" -Method Post -InFile "flutter-engine-windows-release.zip" -ContentType "application/zip"
          Write-Host "Successfully uploaded archive. URL: $response"
        } catch {
          Write-Host "Failed to upload archive: $_"
        }
      shell: pwsh

    - name: Upload Build Artifacts to GitHub
      uses: actions/upload-artifact@v4
      with:
        name: flutter-engine-windows-release
        path: flutter/engine/src/out/host_release
